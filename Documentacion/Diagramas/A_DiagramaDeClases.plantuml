@startuml DiagramaUnico
package peliculas {
    ' ==================== PAQUETE: MODELO ====================
    package modelos {
        package entidades{

        class Pelicula {
        - id: int
        - titulo: String
        - sinopsis: String
        - duracionMinutos: int
        - anio: int
        - idioma: Idioma
        - genero: String
        - imagenUrl: String
        + getId(): int
        + getTitulo(): String
        + getSinopsis(): String
        + getDuracionMinutos(): int
        + getAnio(): int
        + getIdioma(): Idioma
        + getGenero(): String
        + getImagenUrl(): String
        + setId(id: int): void
        + setTitulo(titulo: String): void
        + setSinopsis(sinopsis: String): void
        + setDuracionMinutos(duracionMinutos: int): void
        + setAnio(anio: int): void
        + setIdioma(idioma: Idioma): void
        + setGenero(genero: String): void
        + setImagenUrl(imagenUrl: String): void
        + setIdiomaPorCodigo(codigoIdioma: String): void
        }

        class Funcion {
            - id: int
            - pelicula: Pelicula
            - sala: Sala
            - fechaHoraInicio: LocalDateTime
            - fechaHoraFin: LocalDateTime
            - formato: FormatoFuncion
            - tipoEstreno: TipoEstreno
            + getId(): int
            + getPelicula(): Pelicula
            + getSala(): Sala
            + getFechaHoraInicio(): LocalDateTime
            + getFechaHoraFin(): LocalDateTime
            + getFormato(): FormatoFuncion
            + getTipoEstreno(): TipoEstreno
            + setId(id: int): void
            + setPelicula(pelicula: Pelicula): void
            + setSala(sala: Sala): void
            + setFechaHoraInicio(fechaHoraInicio: LocalDateTime): void
            + setFechaHoraFin(fechaHoraFin: LocalDateTime): void
            + setFormato(formato: FormatoFuncion): void
            + setTipoEstreno(tipoEstreno: TipoEstreno): void
        }

        class Sala {
            - id: int
            - nombre: String
            - capacidad: int
            - tipo: String
        }

        class Cartelera {
            - id: int
            - peliculas: List<Pelicula>
            + getId(): int
            + getPeliculas(): List<Pelicula>
            + setId(id: int): void
            + setPeliculas(peliculas: List<Pelicula>): void
        }

        enum Idioma {
            ESPANOL("Espa침ol", "es")
            INGLES("Ingles", "en")
            CHINO("Chino", "zh")
            - nombre: String {f}
            - codigo: String {f}
            + getNombre(): String
            + getCodigo(): String
            + porCodigo(codigo: String): Idioma {static}
            + porNombre(nombre: String): Idioma {static}
        }

        enum Genero {
            ACCION("Acci칩n")
            COMEDIA("Comedia")
            DRAMA("Drama")
            TERROR("Terror")
            CIENCIA_FICCION("Ciencia Ficci칩n")
            ANIMACION("Animaci칩n")
            - nombre: String {f}
            + getNombre(): String
            + porNombre(nombre: String): Genero {static}
            + validarGeneros(generos: String): boolean {static}
            + normalizarGeneros(generos: String): String {static}
            + obtenerTodosLosGeneros(): String {static}
        }

        enum TipoEstreno{
            ESTRENO
            PREESTRENO
        }

        enum FormatoFuncion{
            DOS_D
            TRES_D
            + fromString(value: String): FormatoFuncion {static}
        }

        }
    }

    ' ==================== PAQUETE: CONTROLADORES ====================
    package controladores {
        class ControladorPelicula {
            - servicioPelicula: ServicioPelicula
            + iniciar(): void
            - mostrarMenu(): void
            - leerOpcion(): int
            - crearNuevaPelicula(): void
            - listarTodasLasPeliculas(): void
            - buscarPeliculaPorId(): void
            - buscarPeliculasPorTitulo(): void
            - actualizarPelicula(): void
            - eliminarPelicula(): void
            - mostrarEstadisticas(): void
            - verificarDuplicados(): void
            - seleccionarIdioma(): Idioma
            - seleccionarGeneros(): String
            - mostrarDetallePelicula(pelicula: Pelicula): void
            - truncarTexto(texto: String, longitud: int): String
            - esperarEnter(): void
            + cerrar(): void
        }

        class ControladorFuncion {
            - servicioFuncion: ServicioFuncion
            - servicioPelicula: ServicioPelicula
            - servicioSala: ServicioSala
            + iniciar(): void
            - mostrarMenu(): void
            - esperarEnter(): void
            - leerOpcion(): int
            - programarNuevaFuncion(): void
            - seleccionarPelicula(): Pelicula
            - seleccionarSala(): Sala
            - seleccionarFormato(): FormatoFuncion
            - seleccionarTipoEstreno(): TipoEstreno
            - listarTodasLasFunciones(): void
            - editarFuncion(): void
            - mostrarDetalleFuncion(funcionExistente: Funcion): void
            - mostrarDetalleFuncion(): void
            - mostrarFuncionesDeSala(sala: Sala): void
            - mostrarFuncionesDeSala(): void
            - eliminarFuncion(): void
            + cerrar(): void
        }

        class ControladorCartelera {
            - servicioCartelera: ServicioCartelera
            + iniciar(): void
            - mostrarMenu(): void
            - leerOpcion(): int
            - agregarFuncionACartelera(): void
            - eliminarFuncionDeCartelera(): void
            - listarFuncionesDeCartelera(): void
            - filtrarCartelera(): void
            - mostrarDetalleFuncion(): void
            + cerrar(): void
        }
    }

    ' ==================== PAQUETE: SERVICIOS ====================
    package servicios {
        class ServicioPelicula {
        - peliculaDAO: PeliculaDAO
        + crearPelicula(titulo: String, sinopsis: String, duracionMinutos: int, anio: int, idioma: Idioma, genero: String, imagenUrl: String): Pelicula
        + actualizarPelicula(id: int, titulo: String, sinopsis: String, duracionMinutos: int, anio: int, idioma: Idioma, genero: String, imagenUrl: String): void
        + eliminarPelicula(id: int): void
        + buscarPeliculaPorId(id: int): Pelicula
        + listarTodasLasPeliculas(): List<Pelicula>
        + buscarPeliculasPorTitulo(titulo: String): List<Pelicula>
        + existePeliculaDuplicada(titulo: String, anio: int): boolean
        + obtenerEstadisticas(): String
        - validarDatosPelicula(titulo: String, sinopsis: String, duracionMinutos: int, anio: int, genero: String): void
        }

        class ServicioFuncion {
            + programarNuevaFuncion(pelicula: Pelicula, sala: Sala, fechaHoraInicio: LocalDateTime, formato: FormatoFuncion, tipoEstreno: TipoEstreno): Funcion
            - validarDatosFuncion(pelicula: Pelicula, sala: Sala, fechaHoraInicio: LocalDateTime, formato: FormatoFuncion, tipoEstreno: TipoEstreno): void
            - validarHorarioTrabajo(inicio: LocalDateTime, fin: LocalDateTime): void
            - validarTraslapeFunciones(sala: Sala, inicio: LocalDateTime, fin: LocalDateTime): void
            + editarFuncion(id: int, pelicula: Pelicula, sala: Sala, fechaHoraInicio: LocalDateTime, formato: FormatoFuncion, tipoEstreno: TipoEstreno): void
            + listarTodasLasFunciones(): List<Funcion>
            + buscarPorId(id:int): Funcion
            + listarFuncionesPorSala(salaId: int): List<Funcion>
            + eliminarFuncion(id: int): void
        }
    }

    ' ==================== RELACIONES ====================

    controladores.ControladorFuncion..> servicios.ServicioFuncion
    controladores.ControladorCartelera..> servicios.ServicioFuncion
    controladores.ControladorPelicula..> servicios.ServicioPelicula
    controladores.ControladorFuncion..> servicios.ServicioPelicula

    Funcion "1" --> "1" Pelicula : proyecta
    Funcion "1" --> "1" Sala : ocurre en
    Cartelera "1" --> "0..*" Pelicula : muestra

    ServicioFuncion ..> Funcion
    ServicioFuncion ..> Cartelera
    ServicioPelicula ..> Pelicula

    Pelicula --> Idioma
    Pelicula --> Genero

    Funcion --> FormatoFuncion
    Funcion --> TipoEstreno


}
@enduml