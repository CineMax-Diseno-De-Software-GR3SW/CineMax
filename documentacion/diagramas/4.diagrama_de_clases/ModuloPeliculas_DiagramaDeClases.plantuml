@startuml DiagramaUnico

skinparam linetype ortho

package peliculas {
    ' ==================== PAQUETE: MODELO ====================
    package modelos {
            class Cartelera {
                - peliculas: List<Pelicula>
            }

            enum DiaSemana {
                LUNES, MARTES, MIERCOLES, JUEVES
                VIERNES, SABADO, DOMINGO
                --
                - precio: BigDecimal {readOnly}
                --
                + {static} obtenerDiaDeFecha(fechaHora: LocalDateTime): DiaSemana
                + esFinDeSemana(): boolean
            }

            enum FormatoFuncion {
                DOS_D, TRES_D
                --
                - multiplicadorPrecio: BigDecimal {readOnly}
            }

            class Funcion {
                - id: int
                - pelicula: Pelicula
                - sala: Sala
                - fechaHoraInicio: LocalDateTime
                - fechaHoraFin: LocalDateTime
                - formato: FormatoFuncion
                - tipoEstreno: TipoEstreno
            }

            enum Genero {
                ACCION, COMEDIA, DRAMA, TERROR, CIENCIA_FICCION
                ANIMACION, ROMANCE, DOCUMENTAL, AVENTURA, FANTASIA
                --
                - nombre: String {readOnly}
                --
                + {static} obtenerTodosLosGeneros(): List<String>
            }

            enum Idioma {
                ESPANOL, INGLES, CHINO
                --
                - nombre: String {readOnly}
                - codigo: String {readOnly}
            }

            class Pelicula {
                - id: int
                - titulo: String
                - sinopsis: String
                - duracionMinutos: int
                - anio: int
                - idioma: Idioma
                - generos: List<Genero>
                - imagenUrl: String
                --
                + agregarGenero(genero: Genero): void
                + eliminarGenero(genero: Genero): void
                + getGenerosComoString(): String
            }

            enum TipoEstreno {
                ESTRENO, PREESTRENO
                --
                - multiplicadorPrecio: BigDecimal {readOnly}
            }
    }

    ' ==================== PAQUETE: SERVICIOS ====================
    package servicios {
        class ServicioFuncion {
            + crearFuncion(...): Funcion
            + actualizarFuncion(...): void
            + listarTodasLasFunciones(): List<Funcion>
            + buscarFuncionPorId(id: int): Funcion
            + listarFuncionesPorSala(salaId: int): List<Funcion>
            + eliminarFuncion(id: int): void
            + obtenerFuncionesPorNombrePelicula(...): List<Funcion>
            - validarDatosFuncion(...): void
            - validarHorarioTrabajo(...): void
            - validarTraslapeFunciones(...): void
        }

        class ServicioPelicula {
            + crearPelicula(...): Pelicula
            + actualizarPelicula(...): void
            + eliminarPelicula(id: int): void
            + buscarPeliculaPorId(id: int): Pelicula
            + listarTodasLasPeliculas(): List<Pelicula>
            + buscarPeliculasPorTitulo(titulo: String): List<Pelicula>
            + existePeliculaDuplicada(titulo: String, anio: int): boolean
            - validarDatosPelicula(...): void
        }
    }

    ' ==================== PAQUETE: CONTROLADORES ====================
    package controladores {
        class ControladorCartelera {
            - servicioPelicula: ServicioPelicula
            - cartelera: Cartelera
            --
            + obtenerCartelera(): List<Pelicula>
        }


        class ControladorFunciones {
            - servicioFuncion: ServicioFuncion
            - servicioSala: ServicioSala
            --
            + obtenerFuncionesPorNombrePelicula(...): List<Funcion>
        }

        class ControladorPelicula {
            - servicioPelicula: ServicioPelicula
        }
    }
}

' ==================== CLASES EXTERNAS ====================
package salas {
    package modelos {
            class Sala {
                - id: int
                - nombre: String
                - capacidad: int
                - tipo: TipoSala
                - estado: EstadoSala
            }
    }
    
    package servicios {
        class ServicioSala {
            - ServicioButaca: ServicioButaca
            --
            + crearSala(Sala sala): void
            + obtenerSalaPorId(int id): Sala
            + listarSalas(): List<Sala>
            + actualizarSala(Sala sala): void
            + eliminarSala(int id): void
            + buscarSalaPorNombre(String nombre): List<Sala>
        }
    }
}

    ' ==================== RELACIONES ====================

    peliculas.modelos.Cartelera "1" -- "0..*" peliculas.modelos.Pelicula
    peliculas.modelos.Pelicula "1" -- "1" peliculas.modelos.Idioma
    peliculas.modelos.Pelicula "1" -- "1..*" peliculas.modelos.Genero
    peliculas.modelos.Funcion "1" -- "1" peliculas.modelos.Pelicula
    peliculas.modelos.Funcion "1" -- "1" salas.modelos.Sala
    peliculas.modelos.Funcion "1" -- "1" peliculas.modelos.FormatoFuncion
    peliculas.modelos.Funcion "1" -- "1" peliculas.modelos.TipoEstreno
    peliculas.modelos.Funcion "1" -- "1" peliculas.modelos.DiaSemana
    peliculas.servicios.ServicioPelicula ..> peliculas.modelos.Pelicula
    peliculas.servicios.ServicioFuncion ..> peliculas.modelos.Funcion
    peliculas.servicios.ServicioPelicula <.. peliculas.controladores.ControladorPelicula
    peliculas.servicios.ServicioPelicula <.. peliculas.controladores.ControladorCartelera
    peliculas.servicios.ServicioFuncion <.. peliculas.controladores.ControladorFunciones
    salas.servicios.ServicioSala <.. peliculas.controladores.ControladorFunciones

@enduml